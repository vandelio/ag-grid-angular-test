{"ast":null,"code":"import { AgGridAngular } from 'ag-grid-angular';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ag-grid-angular\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(http) {\n      this.http = http; // Each Column Definition results in one Column.\n\n      this.columnDefs = [{\n        field: 'name'\n      }, {\n        field: 'company'\n      }, {\n        field: 'email'\n      }, {\n        field: 'phone'\n      }, {\n        field: 'about',\n        resizable: true,\n        minWidth: 200,\n        maxWidth: 500\n      }, {\n        headerName: 'Friend count',\n        field: 'friends',\n        valueFormatter: this.friendsFormatter // Formatting displayed value\n\n      }]; // DefaultColDef sets props common to all Columns\n\n      this.defaultColDef = {\n        sortable: true,\n        filter: true,\n        resizable: true\n      };\n    } // On grid ready we get and then assign the response data to the variable used in the chart\n\n\n    onGridReady(params) {\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n      this.http.get('https://ag-grid-angular-hello-world-bwvk8k.stackblitz.io/assets/cardata.json').subscribe(data => {\n        this.rowData = data;\n      });\n    } /// Resize columns functions\n\n\n    autoSizeAll(skipHeader) {\n      const allColumnIds = [];\n      this.gridColumnApi.getColumns().forEach(column => {\n        allColumnIds.push(column.getId());\n      });\n      this.gridColumnApi.autoSizeColumns(allColumnIds, skipHeader);\n    }\n\n    sizeToFit() {\n      this.gridApi.sizeColumnsToFit();\n    } // Example of consuming Grid Event\n\n\n    onCellClicked(e) {\n      console.log('cellClicked', e);\n    } // Example using Grid's API\n\n\n    clearSelection() {\n      this.agGrid.api.deselectAll();\n    }\n\n    friendsFormatter(params) {\n      return params.value.length;\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"my-app\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(AgGridAngular, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.agGrid = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 4,\n    consts: [[3, \"click\"], [1, \"ag-theme-alpine\", 2, \"width\", \"100%\", \"height\", \"100%\", 3, \"columnDefs\", \"rowData\", \"rowSelection\", \"animateRows\", \"gridReady\", \"cellClicked\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_0_listener() {\n          return ctx.clearSelection();\n        });\n        i0.ɵɵtext(1, \"Clear selection\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_2_listener() {\n          return ctx.autoSizeAll(true);\n        });\n        i0.ɵɵtext(3, \"autoSizeAll skip header true\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_4_listener() {\n          return ctx.autoSizeAll(false);\n        });\n        i0.ɵɵtext(5, \"autoSizeAll\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_6_listener() {\n          return ctx.sizeToFit();\n        });\n        i0.ɵɵtext(7, \"sizeToFit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ag-grid-angular\", 1);\n        i0.ɵɵlistener(\"gridReady\", function AppComponent_Template_ag_grid_angular_gridReady_8_listener($event) {\n          return ctx.onGridReady($event);\n        })(\"cellClicked\", function AppComponent_Template_ag_grid_angular_cellClicked_8_listener($event) {\n          return ctx.onCellClicked($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"columnDefs\", ctx.columnDefs)(\"rowData\", ctx.rowData)(\"rowSelection\", \"multiple\")(\"animateRows\", true);\n      }\n    },\n    dependencies: [i2.AgGridAngular],\n    styles: [\"p[_ngcontent-%COMP%]{font-family:Lato}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}